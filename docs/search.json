[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Understanding metabolic networks",
    "section": "",
    "text": "Introduction to Systems Biology\nThank you for attending the talk titled “AI Meets Metabolism: Efficient Multi-Omics Integration with GEMs.”\nIn this hands-on session, we will cover how fluxosome data from the tissue or cell system under study is generated which is used for AI-assisted multi-omics integration. This workshop is designed to introduce participants the concepts of computational systems biology.\nDuring the session, you will:\nThrough guided examples and practical exercises, participants will gain the skills to analyze metabolic fluxes, interpret FBA results, and translate model outputs into meaningful biological insights.\nOver the past few decades, the scientific community has witnessed remarkable technological progress that has enabled the generation of high-depth, multidimensional omics data, along with the development of advanced informatics tools to analyze them. These diverse data types include transcriptomics, proteomics, metabolomics, lipidomics, and microbiome profiles. Integrative analysis of such multilayered datasets provides valuable system-level insights into biological processes and disease mechanisms. Techniques such as network analysis and machine learning can be applied to interpret complex, multi-dimensional data; however, their effective use requires careful consideration of both the biological question and the methodological purpose.\nSystems biology is an interdisciplinary field focused on the integrative analysis of multilayered data to understand complex biological mechanisms. Biological systems are often described as “complex systems,” composed of numerous interacting elements that collectively give rise to emergent behaviors. Unlike purely physical complex systems made of identical components, biological systems consist of diverse and multifunctional elements that interact nonlinearly and selectively to generate coherent and regulated behaviors. In such systems, functionality arises not only from the structure of the network but also from the specific properties and interactions of its components, highlighting that biological systems are best viewed as symbiotic rather than merely complex.\nThe emergence of high-throughput experimental technologies now allows researchers to investigate cellular components in detail and to explore the interactions that define their collective function. Understanding the topological and dynamic properties of the diverse networks governing cellular behavior remains one of the central challenges in modern biology. Systems biology seeks to explain biological function in terms of the interactions among components, whether these components are genes, proteins, metabolites, or other molecular entities. With the ability to measure a vast array of such components, biological systems have become increasingly complex to study, demanding sophisticated computational approaches grounded in mathematics and statistics. This need has driven the growth of systems biology as a discipline, emphasizing network-based analyses to decipher how various biological components interact to shape cellular and organismal functions.",
    "crumbs": [
      "Introduction to Systems Biology"
    ]
  },
  {
    "objectID": "GEM.html",
    "href": "GEM.html",
    "title": "Genome scale metabolic network model (GEM)",
    "section": "",
    "text": "Human 1 (Human-GEM)\nMetabolism is a fundamental aspect of human cellular function, and its disruption is closely linked to various health conditions, including cancer, obesity, and diabetes. Viral infections are also known to significantly alter host metabolism by hijacking and reprogramming metabolic pathways to support viral replication. Despite major technological advancements that allow measurement of thousands of metabolites, achieving a holistic understanding of cellular metabolism remains a considerable challenge. One reason for this difficulty is that metabolic activity is best defined by metabolic fluxes, the rates at which reactions occur, rather than by static concentrations of biomolecules such as proteins, metabolites, or mRNAs. Concentration data provide only indirect indicators of metabolic activity.\nTo better capture and analyze these dynamic processes, researchers use genome-scale metabolic network models (GEMs) which are mathematical representations of the complete metabolic network within a cell, tissue, or organism. These models describe all known metabolic reactions as a set of stoichiometric equations that can be used to simulate cellular phenotypes and predict metabolic responses to different physiological or environmental conditions. Over the past decade, numerous GEMs of human metabolism have been developed and refined, forming the foundation for studying complex biological systems and disease mechanisms.\nEarly efforts in this field led to the development of landmark models such as Recon and the Edinburgh Human Metabolic Network (EHMN), which laid the groundwork for subsequent iterations including the Recon and Human Metabolic Reaction (HMR) series. These models have been instrumental in exploring disease-related metabolic alterations in conditions such as cancer, dysbiosis, fatty liver disease, and diabetes.\nDespite substantial progress, challenges remain in the ongoing development and integration of human GEMs. Common issues include inconsistent use of reaction, gene, and metabolite identifiers; propagation of legacy errors from earlier models; fragmented development efforts across different research groups; and limited transparency and coordination within the modeling community. Continued collaboration and standardization are essential for refining these models and fully harnessing their potential to advance our understanding of human metabolism and its role in health and disease.\nRobinson and colleagues developed Human1, the first integrated model unifying the major human genome-scale metabolic model (GEM) lineages into a single framework known as the Human-GEM. This model was created through extensive curation and integration of information from the Recon and HMR model families, along with data from HMR2, iHsa, and Recon3D. The resulting Human-GEM encompasses 13,417 reactions, 10,138 metabolites (including 4,164 unique compounds), and 3,625 genes.\nA version-controlled Git repository was used throughout the model’s development to ensure transparency, reproducibility, and collaboration within the scientific community. During curation, the developers removed 8,185 duplicated reactions and 3,215 duplicated metabolites, revised the chemical formulas of 2,016 metabolites, rebalanced 3,226 reactions based on stoichiometric principles, corrected the reversibility of 83 reactions, and eliminated 576 inconsistent reactions that violated mass conservation. Additionally, a new, updated generic human biomass reaction was formulated using data from various tissue and cell compositions to improve flux simulation accuracy.\nTo ensure model quality, the team used Metabolic Model Testing (Memote), a community-driven platform for evaluating GEMs. Human1 demonstrated excellent performance in these assessments, showing 100% stoichiometric consistency, 98.2% charge balance, and 99.4% mass balance across reactions.\nBeyond its structural refinements, Human1 enables the integration of multiple molecular data types for comprehensive metabolic analysis. Information from databases such as CORUM, iHsa, and Recon3D, covering mammalian protein complexes and enzyme associations was integrated with gene-reaction data from earlier models to derive detailed gene-reaction rules. The inclusion of transcript- and protein-level associations further allows for direct integration of omics data into the model, facilitating context-specific simulations and deeper interpretation of cellular metabolism [@knuth84].",
    "crumbs": [
      "Key Concepts",
      "Genome scale metabolic network model (GEM)"
    ]
  },
  {
    "objectID": "Context.html",
    "href": "Context.html",
    "title": "Contextualization of GEM",
    "section": "",
    "text": "The Human-GEM represents a comprehensive, generic model of human metabolism, encompassing metabolic reactions that are known to occur in any human cell. However, because it includes all possible reactions, it does not correspond to the metabolism of any specific tissue or cell type, where only a subset of reactions is active. To address this, a GEM extraction or contextualization process is required to generate a context-specific or tissue-specific metabolic model. This process involves integrating relevant datasets, such as transcriptomic, proteomic, or metabolomic data into the reference metabolic network to tailor the model to a particular biological context.\nGeneric models such as Recon1, EHMN, and HumanCyc are valuable for representing overall human metabolism, but they are not tissue-specific and therefore cannot directly be used to study particular cell types or diseases. Early efforts in tissue-specific modeling utilized transcriptional data to derive models for several human tissues based on subsets of Recon1. Although these models provided insights into tissue-level metabolic behavior under various genetic and physiological conditions, they were limited by the approximations inherent in using transcriptomic data alone. Later approaches combined transcriptomic and proteomic data with Recon1 to develop more flexible, tissue-specific models, such as those representing liver metabolism.\nThe goal of computational algorithms used for tissue or cell-type specific model construction is to integrate information on the presence or absence of metabolic enzymes while maintaining a well-connected metabolic network. A well-connected network ensures that metabolites consumed in one reaction can be produced by another or are available from the cellular environment. However, challenges arise because transcriptomic data are often noisy, relative rather than absolute, and do not always correlate with enzyme abundance or activity.\nTo improve the contextualization process, Agren and colleagues developed an automated computational framework for generating cell-type-specific genome-scale metabolic networks. The central component of this framework is the Integrative Network Inference for Tissues (INIT) algorithm, which incorporates evidence from the Human Protein Atlas (HPA) regarding the presence or absence of metabolic enzymes in specific cell types. INIT also integrates tissue-specific transcriptomic data and constrains the resulting model so that it can produce metabolites experimentally identified in a given tissue, based on information from metabolomics databases such as the Human Metabolome Database (HMDB).\nA key feature of GEMs is the hierarchical structure of gene–transcript–protein–reaction (GTPR) associations. Each metabolic reaction in the model is linked to one or more enzymes, which in turn are connected to their corresponding genes and transcripts. The INIT algorithm assigns evidence-based scores to reactions based on the expression or presence of their associated genes and proteins. Using these scores, the algorithm identifies a subnetwork consisting of reactions with strong experimental support for activity in the target cell type. The extraction process seeks to maximize the total evidence score while ensuring that all reactions in the resulting network can carry flux and that metabolites detected experimentally can be synthesized from known precursors.\nAlthough INIT provides valuable snapshots of tissue-specific metabolism, the resulting models are not directly functional for simulation-based studies. To address this limitation, a modified approach known as task-driven Integrative Network Inference for Tissues (tINIT) was developed. The tINIT algorithm enables the reconstruction of functional genome-scale metabolic models by defining specific metabolic tasks that the contextualized model must be capable of performing. It improves upon INIT by ensuring that reversible reactions cannot carry flux in both directions simultaneously and by allowing users to specify whether net production of all metabolites should be permitted. Additionally, tINIT incorporates a list of core metabolic reactions expected to occur in all cell types, ensuring that reconstructed models maintain essential metabolic functionality while accurately representing tissue-specific features.",
    "crumbs": [
      "Key Concepts",
      "Contextualization of GEM"
    ]
  },
  {
    "objectID": "FBA.html",
    "href": "FBA.html",
    "title": "Flux Balance Analysis (FBA)",
    "section": "",
    "text": "Flux Balance Analysis (FBA) is a mathematical approach used to study the flow of metabolites through a metabolic network. Metabolic flux refers to the rate at which metabolites are converted in a given reaction. FBA allows the prediction of phenotypes such as an organism’s growth rate or the production of biotechnologically relevant metabolites by calculating the distribution of fluxes across the network.\nThe first step in FBA is to mathematically represent all metabolic reactions in a stoichiometric matrix (S), where rows correspond to metabolites and columns correspond to reactions. Stoichiometric coefficients indicate the participation of metabolites in each reaction: negative values represent consumption, positive values represent production, and zero indicates no involvement. Because most reactions involve only a few metabolites, the matrix is typically sparse. A vector v represents the flux through each reaction, while x denotes metabolite concentrations. Assuming steady-state conditions (dx/dt = 0), the system is expressed as S·v = 0, meaning all flux distributions must satisfy mass balance constraints.\nIn large-scale networks, the number of reactions usually exceeds the number of metabolites, resulting in more unknowns than equations and thus multiple possible flux distributions. FBA introduces constraints (from stoichiometry and reaction bounds) and identifies optimal flux distributions within the feasible solution space by maximizing or minimizing a linear objective function: Z = cᵀ·v, where c is a vector of weights representing the contribution of each reaction to the objective. Linear programming is used to solve this optimization problem, identifying fluxes that satisfy the constraints while optimizing the chosen objective.\nThe choice of objective function depends on the biological question. Common objectives include maximizing biomass or growth, maximizing or minimizing metabolite production, minimizing nutrient uptake, or minimizing total flux (to study efficient metabolic routing). Accurate FBA depends on high-quality metabolic network reconstruction, careful constraint selection, and comprehensive genome annotation. Incomplete genome annotation can lead to reactions being predicted with zero flux due to missing upstream or downstream pathways.\nExtensions of FBA, such as Flux Variability Analysis (FVA) and parsimonious FBA (pFBA), allow deeper analysis. FVA calculates the minimum and maximum possible fluxes for each reaction under network constraints, enabling studies of alternative optima, flux distribution under suboptimal conditions, network flexibility, redundancy, and applications in strain design or process optimization. pFBA seeks to minimize the total flux in the network while maintaining optimal performance of the chosen objective, providing insights into efficient flux allocation.\nExample: Predicting Growth in a Simple Metabolic Network\nImagine a tiny cell with a metabolic network that can convert glucose into biomass and byproducts through a few reactions:\n\nGlucose uptake: Glucose enters the cell.\nConversion to energy: Glucose is metabolized to generate ATP.\nBiomass production: ATP and intermediates are used to produce new cell material.\nByproduct secretion: Some metabolites are secreted as waste.\n\nUsing FBA, we can calculate the rates (fluxes) of all these reactions under the assumption that the system is in steady state—meaning metabolites don’t accumulate over time. We set an objective function, such as maximizing biomass production, and apply constraints like the maximum glucose the cell can take in.\nFBA then finds the optimal flux distribution, answering questions like:\n\nHow fast should glucose be consumed?\nHow much ATP is produced?\nHow much biomass can the cell make?\nWhich reactions are active and which are inactive?\n\nBy changing the constraints or objective (e.g., maximizing production of a metabolite instead of growth), FBA can simulate different environmental conditions or metabolic engineering strategies.",
    "crumbs": [
      "Key Concepts",
      "Flux Balance Analysis (FBA)"
    ]
  },
  {
    "objectID": "configure.html",
    "href": "configure.html",
    "title": "System Configuration",
    "section": "",
    "text": "Installation of COBRApy\nIn this workshop, the Python package COBRApy will be used.\nWhat is COBRApy? COBRA methods are widely used for genome-scale modeling of metabolic networks in both prokaryotes and eukaryotes. COBRApy is a constraint-based modeling package designed to handle the biological complexity of modern COBRA models. It provides access to commonly used COBRA methods, including Flux Balance Analysis (FBA), Flux Variability Analysis (FVA), and gene deletion analyses.\nFor installation help, please use the COBRApy Google Group. For usage instructions, see the documentation.\nWe officially test COBRApy with Python 3.7+, though it generally works with Python 3.4 or higher. Windows users, and potentially Mac OS users, are recommended to use the Anaconda Python distribution.",
    "crumbs": [
      "Exercises",
      "System Configuration"
    ]
  },
  {
    "objectID": "configure.html#python-development-environments-quick-guide",
    "href": "configure.html#python-development-environments-quick-guide",
    "title": "System Configuration",
    "section": "Python Development Environments: Quick Guide",
    "text": "Python Development Environments: Quick Guide\n\n\n\nEnvironment\nBest For\nKey Features\nAccess\nSetup\nLink\n\n\n\n\nJupyterLab\nData analysis, visualization, teaching\nInteractive notebooks, Markdown support, flexible layout\nLocal or cloud\nRequires installation\njupyter.org\n\n\nGoogle Colab\nCloud-based notebooks with GPU/TPU support\nFree cloud access, no setup needed, collaboration features\nBrowser-based\nNo installation required\ncolab.research.google.com\n\n\nVS Code\nVersatile code editor with Python support\nLightweight, extensible, supports Jupyter notebooks\nLocal\nRequires installation\ncode.visualstudio.com\n\n\nSpyder\nScientific computing and data analysis\nIntegrated IPython console, variable explorer, built-in plotting\nLocal\nRequires installation\nspyder-ide.org\n\n\nPyCharm\nProfessional Python development\nAdvanced code analysis, debugging, project management\nLocal\nRequires installation\njetbrains.com/pycharm\n\n\n\n\n\nQuick Comparison\n\nJupyterLab: Ideal for interactive coding, data visualization, and educational purposes. It allows you to combine code, text, and visualizations in a single document.\nGoogle Colab: Perfect for quick experiments and collaborative projects. It offers free access to GPUs and TPUs, making it suitable for machine learning tasks.\nVS Code: A lightweight and versatile code editor that supports Python development. It can be extended with various plugins to suit different workflows.\nSpyder: Tailored for scientific computing, it provides an interactive console and tools for data analysis and visualization.\nPyCharm: A full-fledged IDE offering advanced features for professional Python development, including debugging, testing, and project management.",
    "crumbs": [
      "Exercises",
      "System Configuration"
    ]
  },
  {
    "objectID": "exercises.html",
    "href": "exercises.html",
    "title": "Problems",
    "section": "",
    "text": "Will be updated soon",
    "crumbs": [
      "Exercises",
      "Problems"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Kitano, H., Computational systems biology. Nature, 2002. 420(6912): p. 206-10\nJoshi, A., et al., Systems biology in cardiovascular disease: a multiomics approach. Nat Rev Cardiol, 2021. 18(5): p. 313-330.\nMa, H., et al., The Edinburgh human metabolic network reconstruction and its functional analysis. Mol Syst Biol, 2007. 3: p. 135.\nDuarte, N.C., et al., Global reconstruction of the human metabolic network based on genomic and bibliomic data. Proc Natl Acad Sci U S A, 2007. 104(6): p. 1777- 82.\nThiele, I., et al., A community-driven global reconstruction of human metabolism. Nat Biotechnol, 2013. 31(5): p. 419-25.\nBrunk, E., et al., Recon3D enables a three-dimensional view of gene variation in human metabolism. Nat Biotechnol, 2018. 36(3): p. 272-281.\nMardinoglu, A., et al., Integration of clinical data with a genome-scale metabolic model of the human adipocyte. Mol Syst Biol, 2013. 9: p. 649.\nWishart, D.S., et al., HMDB: the Human Metabolome Database. Nucleic Acids Res, 2007. 35(Database issue): p. D521-6.\nAgren, R., et al., Identification of anticancer drugs for hepatocellular carcinoma through personalized genome-scale metabolic modeling. Mol Syst Biol, 2014. 10(3): p. 721.\nOrth, J.D., I. Thiele, and B.O. Palsson, What is flux balance analysis? Nat Biotechnol, 2010. 28(3): p. 245-8.\nMardinoglu, A., et al., Genome-scale metabolic modelling of hepatocytes reveals serine deficiency in patients with non-alcoholic fatty liver disease. Nat Commun, 2014. 5: p. 3083.\nRobinson, J.L., et al., An atlas of human metabolism. Sci Signal, 2020. 13(624)\nRomero, P., et al., Computational prediction of human metabolic pathways from the complete human genome. Genome Biol, 2005. 6(1): p. R2.\nAgren, R., et al., Reconstruction of genome-scale active metabolic networks for 69 human cell types and 16 cancer types using INIT. PLoS Comput Biol, 2012. 8(5): p. e1002518\nLieven, C., et al., MEMOTE for standardized genome-scale metabolic model testing. Nat Biotechnol, 2020. 38(3): p. 272-276.\nEbrahim, A., Lerman, J.A., Palsson, B.O. et al. COBRApy: COnstraints-Based Reconstruction and Analysis for Python. BMC Syst Biol 7, 74 (2013). https://doi.org/10.1186/1752-0509-7-74",
    "crumbs": [
      "References"
    ]
  }
]